{
  "version": 4,
  "terraform_version": "0.14.6",
  "serial": 68,
  "lineage": "ac72d9db-dcdb-04c6-1992-7e376bd84c4b",
  "outputs": {
    "cluster": {
      "value": {
        "CanonicalHostedZoneID": "Z35SXDOTRQ7X7K",
        "Cluster": "commons-v4-cluster",
        "DNSName": "commo-LoadB-6C9IHU3AWP55-2091737786.us-east-1.elb.amazonaws.com",
        "HttpListener": "arn:aws:elasticloadbalancing:us-east-1:246369665268:listener/app/commo-LoadB-6C9IHU3AWP55/e04e11c0079d0de9/c4ceb3c057e8312e",
        "LoadBalancerFullName": "app/commo-LoadB-6C9IHU3AWP55/e04e11c0079d0de9",
        "LoadBalancerSecurityGroup": "sg-007861b7a9071ed2e",
        "StackName": "commons-v4-cluster-stack",
        "TemplateID": "fargate/cluster",
        "TemplateVersion": "__VERSION__",
        "URL": "http://commo-LoadB-6C9IHU3AWP55-2091737786.us-east-1.elb.amazonaws.com"
      },
      "type": [
        "map",
        "string"
      ]
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "ecs_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_NAMED_IAM"
            ],
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:246369665268:stack/commons-v4-cluster-stack/62acb6b0-6fd7-11eb-a2bd-0ec446493c7d",
            "name": "commons-v4-cluster-stack",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "CanonicalHostedZoneID": "Z35SXDOTRQ7X7K",
              "Cluster": "commons-v4-cluster",
              "DNSName": "commo-LoadB-6C9IHU3AWP55-2091737786.us-east-1.elb.amazonaws.com",
              "HttpListener": "arn:aws:elasticloadbalancing:us-east-1:246369665268:listener/app/commo-LoadB-6C9IHU3AWP55/e04e11c0079d0de9/c4ceb3c057e8312e",
              "LoadBalancerFullName": "app/commo-LoadB-6C9IHU3AWP55/e04e11c0079d0de9",
              "LoadBalancerSecurityGroup": "sg-007861b7a9071ed2e",
              "StackName": "commons-v4-cluster-stack",
              "TemplateID": "fargate/cluster",
              "TemplateVersion": "__VERSION__",
              "URL": "http://commo-LoadB-6C9IHU3AWP55-2091737786.us-east-1.elb.amazonaws.com"
            },
            "parameters": {
              "ClusterName": "commons-v4-cluster",
              "ParentVPCStack": "commons-v4-vpc-stack"
            },
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "template_body": "---\n# Copyright 2018 widdix GmbH\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Fargate: cluster, a cloudonaut.io template'\nMetadata:\n  'AWS::CloudFormation::Interface':\n    ParameterGroups:\n      - Label:\n          default: 'Parent Stacks'\n        Parameters:\n          - ParentVPCStack\n          - ParentAuthProxyStack\n          - ParentAlertStack\n          - ParentZoneStack\n          - ParentS3StackAccessLog\n          - ParentWAFStack\n      - Label:\n          default: 'Load Balancer Parameters'\n        Parameters:\n          - LoadBalancerScheme\n          - LoadBalancerCertificateArn\n          - LoadBalancerIdleTimeout\n          - SubDomainNameWithDot\nParameters:\n  ClusterName:\n    Type: String\n    Description: Name of the ECS cluster to be created\n  ParentVPCStack:\n    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'\n    Type: String\n  ParentAuthProxyStack:\n    Description: 'Optional stack name of parent auth proxy stack based on security/auth-proxy-*.yaml template.'\n    Type: String\n    Default: ''\n  ParentAlertStack:\n    Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'\n    Type: String\n    Default: ''\n  ParentZoneStack:\n    Description: 'Optional stack name of parent zone stack based on vpc/zone-*.yaml template.'\n    Type: String\n    Default: ''\n  ParentS3StackAccessLog:\n    Description: 'Optional stack name of parent s3 stack based on state/s3.yaml template (with Access set to ElbAccessLogWrite) to store access logs.'\n    Type: String\n    Default: ''\n  ParentWAFStack:\n    Description: 'Optional stack name of parent WAF stack based on the security/waf.yaml template.'\n    Type: String\n    Default: ''\n  LoadBalancerScheme:\n    Description: 'Indicates whether the load balancer in front of the ECS service is internet-facing or internal.'\n    Type: String\n    Default: 'internet-facing'\n    AllowedValues:\n      - 'internet-facing'\n      - 'internal'\n  LoadBalancerCertificateArn:\n    Description: 'Optional Amazon Resource Name (ARN) of the certificate to associate with the load balancer. If set, HTTP requests are redirected to HTTPS.'\n    Type: String\n    Default: ''\n  LoadBalancerIdleTimeout:\n    Description: 'The idle timeout value, in seconds.'\n    Type: Number\n    Default: 60\n    MinValue: 1\n    MaxValue: 4000\n  SubDomainNameWithDot:\n    Description: 'Name that is used to create the DNS entry with trailing dot, e.g. ?{SubDomainNameWithDot}?{HostedZoneName}. Leave blank for naked (or apex and bare) domain. Requires ParentZoneStack parameter!'\n    Type: String\n    Default: ''\nConditions:\n  HasAuthProxySecurityGroup: !Not [!Equals [!Ref ParentAuthProxyStack, '']]\n  HasNotAuthProxySecurityGroup: !Equals [!Ref ParentAuthProxyStack, '']\n  HasLoadBalancerSchemeInternetFacing:\n    !Equals [!Ref LoadBalancerScheme, 'internet-facing']\n  HasLoadBalancerSchemeInternal: !Equals [!Ref LoadBalancerScheme, 'internal']\n  HasLoadBalancerCertificateArn:\n    !Not [!Equals [!Ref LoadBalancerCertificateArn, '']]\n  HasAuthProxySecurityGroupAndLoadBalancerCertificateArn:\n    !And [\n      !Condition HasAuthProxySecurityGroup,\n      !Condition HasLoadBalancerCertificateArn\n    ]\n  HasNotAuthProxySecurityGroupAndLoadBalancerCertificateArn:\n    !And [\n      !Condition HasNotAuthProxySecurityGroup,\n      !Condition HasLoadBalancerCertificateArn\n    ]\n  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]\n  HasZone: !Not [!Equals [!Ref ParentZoneStack, '']]\n  HasZoneAndLoadBalancerSchemeInternetFacing:\n    !And [!Condition HasZone, !Condition HasLoadBalancerSchemeInternetFacing]\n  HasS3Bucket: !Not [!Equals [!Ref ParentS3StackAccessLog, '']]\n  HasWAF: !Not [!Equals [!Ref ParentWAFStack, '']]\nResources:\n  Cluster:\n    Type: 'AWS::ECS::Cluster'\n    Properties:\n      ClusterName: !Ref 'ClusterName'\n  RecordSet:\n    Condition: HasZone\n    Type: 'AWS::Route53::RecordSet'\n    Properties:\n      AliasTarget:\n        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID\n        DNSName: !GetAtt 'LoadBalancer.DNSName'\n      HostedZoneId:\n        { 'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneId' }\n      Name: !Sub\n        - '${SubDomainNameWithDot}${HostedZoneName}'\n        - SubDomainNameWithDot: !Ref SubDomainNameWithDot\n          HostedZoneName:\n            { 'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName' }\n      Type: A\n  RecordSetIPv6:\n    Condition: HasZoneAndLoadBalancerSchemeInternetFacing\n    Type: 'AWS::Route53::RecordSet'\n    Properties:\n      AliasTarget:\n        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID\n        DNSName: !GetAtt 'LoadBalancer.DNSName'\n      HostedZoneId:\n        { 'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneId' }\n      Name: !Sub\n        - '${SubDomainNameWithDot}${HostedZoneName}'\n        - SubDomainNameWithDot: !Ref SubDomainNameWithDot\n          HostedZoneName:\n            { 'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName' }\n      Type: AAAA\n  LoadBalancerSecurityGroup:\n    Type: 'AWS::EC2::SecurityGroup'\n    Properties:\n      GroupDescription: !Sub '${AWS::StackName}-load-balancer'\n      VpcId: { 'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC' }\n  LoadBalancerSecurityGroupInHttpFromWorld:\n    Type: 'AWS::EC2::SecurityGroupIngress'\n    Condition: HasNotAuthProxySecurityGroup\n    Properties:\n      GroupId: !Ref LoadBalancerSecurityGroup\n      IpProtocol: tcp\n      FromPort: 80\n      ToPort: 80\n      CidrIp: '0.0.0.0/0'\n  LoadBalancerSecurityGroupInHttpFromWorldIPv6:\n    Type: 'AWS::EC2::SecurityGroupIngress'\n    Condition: HasNotAuthProxySecurityGroup\n    Properties:\n      GroupId: !Ref LoadBalancerSecurityGroup\n      IpProtocol: tcp\n      FromPort: 80\n      ToPort: 80\n      CidrIpv6: '::/0'\n  LoadBalancerSecurityGroupInHttpsFromWorld:\n    Type: 'AWS::EC2::SecurityGroupIngress'\n    Condition: HasNotAuthProxySecurityGroupAndLoadBalancerCertificateArn\n    Properties:\n      GroupId: !Ref LoadBalancerSecurityGroup\n      IpProtocol: tcp\n      FromPort: 443\n      ToPort: 443\n      CidrIp: '0.0.0.0/0'\n  LoadBalancerSecurityGroupInHttpsFromWorldIPv6:\n    Type: 'AWS::EC2::SecurityGroupIngress'\n    Condition: HasNotAuthProxySecurityGroupAndLoadBalancerCertificateArn\n    Properties:\n      GroupId: !Ref LoadBalancerSecurityGroup\n      IpProtocol: tcp\n      FromPort: 443\n      ToPort: 443\n      CidrIpv6: '::/0'\n  LoadBalancerSecurityGroupInHttpFromAuthProxy:\n    Type: 'AWS::EC2::SecurityGroupIngress'\n    Condition: HasAuthProxySecurityGroup\n    Properties:\n      GroupId: !Ref LoadBalancerSecurityGroup\n      IpProtocol: tcp\n      FromPort: 80\n      ToPort: 80\n      SourceSecurityGroupId:\n        { 'Fn::ImportValue': !Sub '${ParentAuthProxyStack}-SecurityGroup' }\n  LoadBalancerSecurityGroupInHttpsFromAuthProxy:\n    Type: 'AWS::EC2::SecurityGroupIngress'\n    Condition: HasAuthProxySecurityGroupAndLoadBalancerCertificateArn\n    Properties:\n      GroupId: !Ref LoadBalancerSecurityGroup\n      IpProtocol: tcp\n      FromPort: 443\n      ToPort: 443\n      SourceSecurityGroupId:\n        { 'Fn::ImportValue': !Sub '${ParentAuthProxyStack}-SecurityGroup' }\n  LoadBalancer:\n    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'\n    Properties:\n      IpAddressType: !If [HasLoadBalancerSchemeInternal, 'ipv4', 'dualstack']\n      LoadBalancerAttributes:\n        - Key: 'idle_timeout.timeout_seconds'\n          Value: !Ref LoadBalancerIdleTimeout\n        - Key: 'routing.http2.enabled'\n          Value: 'true'\n        - Key: 'access_logs.s3.enabled'\n          Value: !If [HasS3Bucket, 'true', 'false']\n        - !If [\n            HasS3Bucket,\n            { Key: 'access_logs.s3.prefix', Value: !Ref 'AWS::StackName' },\n            !Ref 'AWS::NoValue'\n          ]\n        - !If [\n            HasS3Bucket,\n            {\n              Key: 'access_logs.s3.bucket',\n              Value:\n                {\n                  'Fn::ImportValue': !Sub '${ParentS3StackAccessLog}-BucketName'\n                }\n            },\n            !Ref 'AWS::NoValue'\n          ]\n      Scheme: !Ref LoadBalancerScheme\n      SecurityGroups:\n        - !Ref LoadBalancerSecurityGroup\n      Subnets: !If\n        - HasLoadBalancerSchemeInternal\n        - !Split [\n            ',',\n            { 'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsPrivate' }\n          ]\n        - !Split [\n            ',',\n            { 'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsPublic' }\n          ]\n      Type: application\n  WebACLAssociation:\n    Condition: HasWAF\n    Type: AWS::WAFv2::WebACLAssociation\n    Properties:\n      ResourceArn: !Ref LoadBalancer\n      WebACLArn: { 'Fn::ImportValue': !Sub '${ParentWAFStack}-WebACL' }\n  HTTPCodeELB5XXTooHighAlarm:\n    Condition: HasAlertTopic\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmDescription: 'Application load balancer returns 5XX HTTP status codes'\n      Namespace: 'AWS/ApplicationELB'\n      MetricName: HTTPCode_ELB_5XX_Count\n      Statistic: Sum\n      Period: 60\n      EvaluationPeriods: 1\n      ComparisonOperator: GreaterThanThreshold\n      Threshold: 0\n      AlarmActions:\n        - { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n      Dimensions:\n        - Name: LoadBalancer\n          Value: !GetAtt 'LoadBalancer.LoadBalancerFullName'\n      TreatMissingData: notBreaching\n  RejectedConnectionCountTooHighAlarm:\n    Condition: HasAlertTopic\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmDescription: 'Application load balancer rejected connections because the load balancer had reached its maximum number of connections'\n      Namespace: 'AWS/ApplicationELB'\n      MetricName: RejectedConnectionCount\n      Statistic: Sum\n      Period: 60\n      EvaluationPeriods: 1\n      ComparisonOperator: GreaterThanThreshold\n      Threshold: 0\n      AlarmActions:\n        - { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n      Dimensions:\n        - Name: LoadBalancer\n          Value: !GetAtt 'LoadBalancer.LoadBalancerFullName'\n      TreatMissingData: notBreaching\n  HttpListener:\n    Type: 'AWS::ElasticLoadBalancingV2::Listener'\n    Properties:\n      DefaultActions:\n        - !If\n          - HasLoadBalancerCertificateArn\n          - RedirectConfig:\n              Port: '443'\n              Protocol: HTTPS\n              StatusCode: 'HTTP_301'\n            Type: redirect\n          - FixedResponseConfig:\n              ContentType: 'text/plain'\n              MessageBody: default\n              StatusCode: '404'\n            Type: 'fixed-response'\n      LoadBalancerArn: !Ref LoadBalancer\n      Port: 80\n      Protocol: HTTP\n  HttpsListener:\n    Condition: HasLoadBalancerCertificateArn\n    Type: 'AWS::ElasticLoadBalancingV2::Listener'\n    Properties:\n      Certificates:\n        - CertificateArn: !Ref LoadBalancerCertificateArn\n      DefaultActions:\n        - FixedResponseConfig:\n            ContentType: 'text/plain'\n            MessageBody: default\n            StatusCode: '404'\n          Type: 'fixed-response'\n      LoadBalancerArn: !Ref LoadBalancer\n      Port: 443\n      Protocol: HTTPS\n      SslPolicy: 'ELBSecurityPolicy-FS-1-2-Res-2019-08'\nOutputs:\n  TemplateID:\n    Description: 'cloudonaut.io template id.'\n    Value: 'fargate/cluster'\n  TemplateVersion:\n    Description: 'cloudonaut.io template version.'\n    Value: '__VERSION__'\n  StackName:\n    Description: 'Stack name.'\n    Value: !Sub '${AWS::StackName}'\n  Cluster:\n    Description: 'Fargate cluster.'\n    Value: !Ref Cluster\n    Export:\n      Name: !Sub '${AWS::StackName}-Cluster'\n  DNSName:\n    Description: 'The DNS name for the ECS cluster load balancer.'\n    Value: !GetAtt 'LoadBalancer.DNSName'\n    Export:\n      Name: !Sub '${AWS::StackName}-DNSName'\n  URL:\n    Description: 'URL to the ECS cluster.'\n    Value: !Sub 'http://${LoadBalancer.DNSName}'\n    Export:\n      Name: !Sub '${AWS::StackName}-URL'\n  CanonicalHostedZoneID:\n    Description: 'The ID of the Amazon Route 53 hosted zone associated with the load balancer.'\n    Value: !GetAtt LoadBalancer.CanonicalHostedZoneID\n    Export:\n      Name: !Sub '${AWS::StackName}-CanonicalHostedZoneID'\n  LoadBalancerFullName:\n    Description: 'ALB full name for services.'\n    Value: !GetAtt 'LoadBalancer.LoadBalancerFullName'\n    Export:\n      Name: !Sub '${AWS::StackName}-LoadBalancerFullName'\n  LoadBalancerSecurityGroup:\n    Description: 'The Security Group of the Load Balancer.'\n    Value: !Ref LoadBalancerSecurityGroup\n    Export:\n      Name: !Sub '${AWS::StackName}-LoadBalancerSecurityGroup'\n  HttpListener:\n    Description: 'ALB HTTP listener for services.'\n    Value: !Ref HttpListener\n    Export:\n      Name: !Sub '${AWS::StackName}-HttpListener'\n  HttpsListener:\n    Condition: HasLoadBalancerCertificateArn\n    Description: 'ALB HTTPS listener for services.'\n    Value: !Ref HttpsListener\n    Export:\n      Name: !Sub '${AWS::StackName}-HttpsListener'\n",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_cloudformation_stack.vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "ecs_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_NAMED_IAM"
            ],
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:246369665268:stack/commons-v4-svc-stack/ab767110-6fd7-11eb-82fd-0ab0f473fdd5",
            "name": "commons-v4-svc-stack",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "StackName": "commons-v4-svc-stack",
              "TemplateID": "fargate/service-cluster-alb",
              "TemplateVersion": "__VERSION__"
            },
            "parameters": {
              "DesiredCount": "1",
              "ParentClusterStack": "commons-v4-cluster-stack",
              "ParentVPCStack": "commons-v4-vpc-stack",
              "ServiceName": "commons-v4-service",
              "SubnetsReach": "Public"
            },
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "template_body": "---\n# Copyright 2018 widdix GmbH\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Fargate: service that runs on a Fargate cluster based on fargate/cluster.yaml and uses the cluster ALB, a cloudonaut.io template'\nMetadata:\n  'AWS::CloudFormation::Interface':\n    ParameterGroups:\n      - Label:\n          default: 'Parent Stacks'\n        Parameters:\n          - ParentVPCStack\n          - ParentClusterStack\n          - ParentAlertStack\n          - ParentZoneStack\n          - ParentClientStack1\n          - ParentClientStack2\n          - ParentClientStack3\n      - Label:\n          default: 'Load Balancer Parameters'\n        Parameters:\n          - LoadBalancerPriority\n          - LoadBalancerHostPattern\n          - LoadBalancerPathPattern\n          - LoadBalancerHttps\n          - LoadBalancerDeregistrationDelay\n      - Label:\n          default: 'Task Parameters'\n        Parameters:\n          - TaskPolicies\n          - ProxyImage\n          - ProxyCommand\n          - ProxyPort\n          - ProxyEnvironment1Key\n          - ProxyEnvironment1Value\n          - ProxyEnvironment2Key\n          - ProxyEnvironment2Value\n          - ProxyEnvironment3Key\n          - ProxyEnvironment3Value\n          - AppImage\n          - AppCommand\n          - AppPort\n          - AppEnvironment1Key\n          - AppEnvironment1Value\n          - AppEnvironment2Key\n          - AppEnvironment2Value\n          - AppEnvironment3Key\n          - AppEnvironment3Value\n          - SidecarImage\n          - SidecarCommand\n          - SidecarPort\n          - SidecarEnvironment1Key\n          - SidecarEnvironment1Value\n          - SidecarEnvironment2Key\n          - SidecarEnvironment2Value\n          - SidecarEnvironment3Key\n          - SidecarEnvironment3Value\n      - Label:\n          default: 'Service Parameters'\n        Parameters:\n          - SubDomainNameWithDot\n          - Cpu\n          - Memory\n          - SubnetsReach\n          - AutoScaling\n          - DesiredCount\n          - MaxCapacity\n          - MinCapacity\n          - HealthCheckGracePeriod\n          - LogsRetentionInDays\n      - Label:\n          default: 'Permission Parameters'\n        Parameters:\n          - PermissionsBoundary\nParameters:\n  ServiceName:\n    Type: String\n    Default: nginx\n    Description: A name for the service\n  ParentVPCStack:\n    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'\n    Type: String\n  ParentClusterStack:\n    Description: 'Stack name of parent Cluster stack based on fargate/cluster.yaml template.'\n    Type: String\n  ParentAlertStack:\n    Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'\n    Type: String\n    Default: ''\n  ParentZoneStack:\n    Description: 'Optional stack name of parent zone stack based on vpc/zone-*.yaml template.'\n    Type: String\n    Default: ''\n  ParentClientStack1:\n    Description: 'Optional stack name of parent Client Security Group stack based on state/client-sg.yaml template to allow network access from the service to whatever uses the client security group.'\n    Type: String\n    Default: ''\n  ParentClientStack2:\n    Description: 'Optional stack name of parent Client Security Group stack based on state/client-sg.yaml template to allow network access from the service to whatever uses the client security group.'\n    Type: String\n    Default: ''\n  ParentClientStack3:\n    Description: 'Optional stack name of parent Client Security Group stack based on state/client-sg.yaml template to allow network access from the service to whatever uses the client security group.'\n    Type: String\n    Default: ''\n  PermissionsBoundary:\n    Description: 'Optional ARN for a policy that will be used as the permission boundary for all roles created by this template.'\n    Type: String\n    Default: ''\n  LoadBalancerPriority:\n    Description: 'The priority for the rule. Elastic Load Balancing evaluates rules in priority order, from the lowest value to the highest value. If a request satisfies a rule, Elastic Load Balancing ignores all subsequent rules. A target group can have only one rule with a given priority.'\n    Type: Number\n    Default: 1\n    ConstraintDescription: 'Must be in the range [1-99999]'\n    MinValue: 1\n    MaxValue: 99999\n  LoadBalancerHostPattern:\n    Description: 'Optional host pattern. Specify LoadBalancerPathPattern and/or LoadBalancerHostPattern.'\n    Type: String\n    Default: ''\n    ConstraintDescription: 'Must not be longer than 255'\n    MaxLength: 255\n  LoadBalancerPathPattern:\n    Description: 'Optional path pattern. Specify LoadBalancerPathPattern and/or LoadBalancerHostPattern.'\n    Type: String\n    Default: '/*'\n    ConstraintDescription: 'Must not be longer than 255'\n    MaxLength: 255\n  LoadBalancerHttps:\n    Description: 'If the cluster supports HTTPS (LoadBalancerCertificateArn is set) you can enable HTTPS for the service'\n    Type: String\n    Default: false\n    AllowedValues:\n      - true\n      - false\n  LoadBalancerDeregistrationDelay:\n    Description: 'The amount time (in seconds) to wait before changing the state of a deregistering target from draining to unused.'\n    Type: Number\n    Default: 60\n    ConstraintDescription: 'Must be in the range [0-3600]'\n    MinValue: 0\n    MaxValue: 3600\n  TaskPolicies:\n    Description: 'Comma-delimited list of IAM managed policy ARNs to attach to the task IAM role'\n    Type: String\n    Default: ''\n  ProxyImage:\n    Description: 'Optional Docker image to use for the proxy container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'\n    Type: String\n    Default: ''\n  ProxyCommand:\n    Description: 'Optional command used when starting the proxy container.'\n    Type: String\n    Default: ''\n  ProxyPort:\n    Description: 'The port exposed by the proxy container that receives traffic from the load balancer (ProxyPort \u003c\u003e AppPort \u003c\u003e SidecarPort; ignored if ProxyImage is not set).'\n    Type: Number\n    Default: 8000\n    MinValue: 1\n    MaxValue: 49150\n  ProxyEnvironment1Key:\n    Description: 'Optional environment variable 1 key for proxy container.'\n    Type: String\n    Default: ''\n  ProxyEnvironment1Value:\n    Description: 'Optional environment variable 1 value for proxy container.'\n    Type: String\n    Default: ''\n  ProxyEnvironment2Key:\n    Description: 'Optional environment variable 2 key for proxy container.'\n    Type: String\n    Default: ''\n  ProxyEnvironment2Value:\n    Description: 'Optional environment variable 2 value for proxy container.'\n    Type: String\n    Default: ''\n  ProxyEnvironment3Key:\n    Description: 'Optional environment variable 3 key for proxy container.'\n    Type: String\n    Default: ''\n  ProxyEnvironment3Value:\n    Description: 'Optional environment variable 3 value for proxy container.'\n    Type: String\n    Default: ''\n  AppImage:\n    Description: 'The Docker image to use for the app container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'\n    Type: String\n    Default: 'widdix/hello:v1'\n  AppCommand:\n    Description: 'Optional commands (comma-delimited) used when starting the app container.'\n    Type: String\n    Default: ''\n  AppPort:\n    Description: 'The port exposed by the app container that receives traffic from the load balancer or the proxy container (AppPort \u003c\u003e ProxyPort \u003c\u003e SidecarPort).'\n    Type: Number\n    Default: 80\n    MinValue: 1\n    MaxValue: 49150\n  AppEnvironment1Key:\n    Description: 'Optional environment variable 1 key for app container.'\n    Type: String\n    Default: ''\n  AppEnvironment1Value:\n    Description: 'Optional environment variable 1 value for app container.'\n    Type: String\n    Default: ''\n  AppEnvironment2Key:\n    Description: 'Optional environment variable 2 key for app container.'\n    Type: String\n    Default: ''\n  AppEnvironment2Value:\n    Description: 'Optional environment variable 2 value for app container.'\n    Type: String\n    Default: ''\n  AppEnvironment3Key:\n    Description: 'Optional environment variable 3 key for app container.'\n    Type: String\n    Default: ''\n  AppEnvironment3Value:\n    Description: 'Optional environment variable 3 value for app container.'\n    Type: String\n    Default: ''\n  SidecarImage:\n    Description: 'Optional Docker image to use for the sidecar container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'\n    Type: String\n    Default: ''\n  SidecarCommand:\n    Description: 'Optional command used when starting the sidecar container.'\n    Type: String\n    Default: ''\n  SidecarPort:\n    Description: 'The port exposed by the sidecar container reachable from the app container on host localhost (SidecarPort \u003c\u003e ProxyPort \u003c\u003e AppPort).'\n    Type: Number\n    Default: 9000\n    MinValue: 1\n    MaxValue: 49150\n  SidecarEnvironment1Key:\n    Description: 'Optional environment variable 1 key for sidecar container.'\n    Type: String\n    Default: ''\n  SidecarEnvironment1Value:\n    Description: 'Optional environment variable 1 value for sidecar container.'\n    Type: String\n    Default: ''\n  SidecarEnvironment2Key:\n    Description: 'Optional environment variable 2 key for sidecar container.'\n    Type: String\n    Default: ''\n  SidecarEnvironment2Value:\n    Description: 'Optional environment variable 2 value for sidecar container.'\n    Type: String\n    Default: ''\n  SidecarEnvironment3Key:\n    Description: 'Optional environment variable 3 key for sidecar container.'\n    Type: String\n    Default: ''\n  SidecarEnvironment3Value:\n    Description: 'Optional environment variable 3 value for sidecar container.'\n    Type: String\n    Default: ''\n  SubDomainNameWithDot:\n    Description: 'Name that is used to create the DNS entry with trailing dot, e.g. ?{SubDomainNameWithDot}?{HostedZoneName}. Leave blank for naked (or apex and bare) domain. Requires ParentZoneStack parameter!'\n    Type: String\n    Default: ''\n  Cpu:\n    Description: 'The minimum number of vCPUs to reserve for the container.'\n    Type: String\n    Default: '0.25'\n    AllowedValues: ['0.25', '0.5', '1', '2', '4']\n  Memory:\n    Description: 'The amount (in GB) of memory used by the task.'\n    Type: String\n    Default: '0.5'\n    AllowedValues:\n      [\n        '0.5',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '10',\n        '11',\n        '12',\n        '13',\n        '14',\n        '15',\n        '16',\n        '17',\n        '18',\n        '19',\n        '20',\n        '21',\n        '22',\n        '23',\n        '24',\n        '25',\n        '26',\n        '27',\n        '28',\n        '29',\n        '30'\n      ]\n  DesiredCount:\n    Description: 'The number of simultaneous tasks, that you want to run on the cluster.'\n    Type: Number\n    Default: 2\n    ConstraintDescription: 'Must be \u003e= 1'\n    MinValue: 1\n  MaxCapacity:\n    Description: 'The maximum number of simultaneous tasks, that you want to run on the cluster.'\n    Type: Number\n    Default: 4\n    ConstraintDescription: 'Must be \u003e= 1'\n    MinValue: 1\n  MinCapacity:\n    Description: 'The minimum number of simultaneous tasks, that you want to run on the cluster.'\n    Type: Number\n    Default: 2\n    ConstraintDescription: 'Must be \u003e= 1'\n    MinValue: 1\n  LogsRetentionInDays:\n    Description: 'Specifies the number of days you want to retain log events in the specified log group.'\n    Type: Number\n    Default: 14\n    AllowedValues:\n      [\n        1,\n        3,\n        5,\n        7,\n        14,\n        30,\n        60,\n        90,\n        120,\n        150,\n        180,\n        365,\n        400,\n        545,\n        731,\n        1827,\n        3653\n      ]\n  SubnetsReach:\n    Description: 'Should the service have direct access to the Internet or do you prefer private subnets with NAT?'\n    Type: String\n    Default: Public\n    AllowedValues:\n      - Public\n      - Private\n  AutoScaling:\n    Description: 'Scale number of tasks based on CPU load?'\n    Type: String\n    Default: 'true'\n    AllowedValues: ['true', 'false']\n  HealthCheckGracePeriod:\n    Description: 'The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started.'\n    Type: Number\n    Default: 60\n    MinValue: 0\n    MaxValue: 1800\nMappings:\n  CpuMap:\n    '0.25':\n      Cpu: 256\n    '0.5':\n      Cpu: 512\n    '1':\n      Cpu: 1024\n    '2':\n      Cpu: 2048\n    '4':\n      Cpu: 4096\n  MemoryMap:\n    '0.5':\n      Memory: 512\n    '1':\n      Memory: 1024\n    '2':\n      Memory: 2048\n    '3':\n      Memory: 3072\n    '4':\n      Memory: 4096\n    '5':\n      Memory: 5120\n    '6':\n      Memory: 6144\n    '7':\n      Memory: 7168\n    '8':\n      Memory: 8192\n    '9':\n      Memory: 9216\n    '10':\n      Memory: 10240\n    '11':\n      Memory: 11264\n    '12':\n      Memory: 12288\n    '13':\n      Memory: 13312\n    '14':\n      Memory: 14336\n    '15':\n      Memory: 15360\n    '16':\n      Memory: 16384\n    '17':\n      Memory: 17408\n    '18':\n      Memory: 18432\n    '19':\n      Memory: 19456\n    '20':\n      Memory: 20480\n    '21':\n      Memory: 21504\n    '22':\n      Memory: 22528\n    '23':\n      Memory: 23552\n    '24':\n      Memory: 24576\n    '25':\n      Memory: 25600\n    '26':\n      Memory: 26624\n    '27':\n      Memory: 27648\n    '28':\n      Memory: 28672\n    '29':\n      Memory: 29696\n    '30':\n      Memory: 30720\nConditions:\n  HasPermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, '']]\n  HasLoadBalancerHttps: !Equals [!Ref LoadBalancerHttps, 'true']\n  HasLoadBalancerPathPattern: !Not [!Equals [!Ref LoadBalancerPathPattern, '']]\n  HasLoadBalancerHostPattern: !Not [!Equals [!Ref LoadBalancerHostPattern, '']]\n  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]\n  HasZone: !Not [!Equals [!Ref ParentZoneStack, '']]\n  HasSubnetsReachPublic: !Equals [!Ref SubnetsReach, Public]\n  HasAutoScaling: !Equals [!Ref AutoScaling, 'true']\n  HasClientSecurityGroup1: !Not [!Equals [!Ref ParentClientStack1, '']]\n  HasClientSecurityGroup2: !Not [!Equals [!Ref ParentClientStack2, '']]\n  HasClientSecurityGroup3: !Not [!Equals [!Ref ParentClientStack3, '']]\n  HasTaskPolicies: !Not [!Equals [!Ref TaskPolicies, '']]\n  HasAppCommand: !Not [!Equals [!Ref AppCommand, '']]\n  HasAppEnvironment1Key: !Not [!Equals [!Ref AppEnvironment1Key, '']]\n  HasAppEnvironment2Key: !Not [!Equals [!Ref AppEnvironment2Key, '']]\n  HasAppEnvironment3Key: !Not [!Equals [!Ref AppEnvironment3Key, '']]\n  HasProxyImage: !Not [!Equals [!Ref ProxyImage, '']]\n  HasProxyCommand: !Not [!Equals [!Ref ProxyCommand, '']]\n  HasProxyEnvironment1Key: !Not [!Equals [!Ref ProxyEnvironment1Key, '']]\n  HasProxyEnvironment2Key: !Not [!Equals [!Ref ProxyEnvironment2Key, '']]\n  HasProxyEnvironment3Key: !Not [!Equals [!Ref ProxyEnvironment3Key, '']]\n  HasSidecarImage: !Not [!Equals [!Ref SidecarImage, '']]\n  HasSidecarCommand: !Not [!Equals [!Ref SidecarCommand, '']]\n  HasSidecarEnvironment1Key: !Not [!Equals [!Ref SidecarEnvironment1Key, '']]\n  HasSidecarEnvironment2Key: !Not [!Equals [!Ref SidecarEnvironment2Key, '']]\n  HasSidecarEnvironment3Key: !Not [!Equals [!Ref SidecarEnvironment3Key, '']]\nResources:\n  RecordSet:\n    Condition: HasZone\n    Type: 'AWS::Route53::RecordSet'\n    Properties:\n      AliasTarget:\n        HostedZoneId:\n          {\n            'Fn::ImportValue': !Sub '${ParentClusterStack}-CanonicalHostedZoneID'\n          }\n        DNSName: { 'Fn::ImportValue': !Sub '${ParentClusterStack}-DNSName' }\n      HostedZoneId:\n        { 'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneId' }\n      Name: !Sub\n        - '${SubDomainNameWithDot}${HostedZoneName}'\n        - SubDomainNameWithDot: !Ref SubDomainNameWithDot\n          HostedZoneName:\n            { 'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName' }\n      Type: A\n  RecordSetIPv6: # We can not conditionally create this only if the cluster's ALB has IPv6 turned on. Route53 does not let us query a broken AAAA record either. It just shows up as a Route53 record.\n    Condition: HasZone\n    Type: 'AWS::Route53::RecordSet'\n    Properties:\n      AliasTarget:\n        HostedZoneId:\n          {\n            'Fn::ImportValue': !Sub '${ParentClusterStack}-CanonicalHostedZoneID'\n          }\n        DNSName: { 'Fn::ImportValue': !Sub '${ParentClusterStack}-DNSName' }\n      HostedZoneId:\n        { 'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneId' }\n      Name: !Sub\n        - '${SubDomainNameWithDot}${HostedZoneName}'\n        - SubDomainNameWithDot: !Ref SubDomainNameWithDot\n          HostedZoneName:\n            { 'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName' }\n      Type: AAAA\n  TargetGroup:\n    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'\n    Properties:\n      HealthCheckIntervalSeconds: 15\n      HealthCheckPath: '/'\n      HealthCheckProtocol: HTTP\n      HealthCheckTimeoutSeconds: 10\n      HealthyThresholdCount: 2\n      UnhealthyThresholdCount: 2\n      Matcher:\n        HttpCode: '200-299'\n      Port: 8080 # overriden when containers are attached\n      Protocol: HTTP\n      TargetType: ip\n      TargetGroupAttributes:\n        - Key: deregistration_delay.timeout_seconds\n          Value: !Ref LoadBalancerDeregistrationDelay\n      VpcId: { 'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC' }\n  HTTPCodeTarget5XXTooHighAlarm:\n    Condition: HasAlertTopic\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmDescription: 'Application load balancer receives 5XX HTTP status codes from targets'\n      Namespace: 'AWS/ApplicationELB'\n      MetricName: HTTPCode_Target_5XX_Count\n      Statistic: Sum\n      Period: 60\n      EvaluationPeriods: 1\n      ComparisonOperator: GreaterThanThreshold\n      Threshold: 0\n      AlarmActions:\n        - { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n      Dimensions:\n        - Name: LoadBalancer\n          Value:\n            {\n              'Fn::ImportValue': !Sub '${ParentClusterStack}-LoadBalancerFullName'\n            }\n        - Name: TargetGroup\n          Value: !GetAtt TargetGroup.TargetGroupFullName\n      TreatMissingData: notBreaching\n  TargetConnectionErrorCountTooHighAlarm:\n    Condition: HasAlertTopic\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmDescription: 'Application load balancer could not connect to targets'\n      Namespace: 'AWS/ApplicationELB'\n      MetricName: TargetConnectionErrorCount\n      Statistic: Sum\n      Period: 60\n      EvaluationPeriods: 1\n      ComparisonOperator: GreaterThanThreshold\n      Threshold: 0\n      AlarmActions:\n        - { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n      Dimensions:\n        - Name: LoadBalancer\n          Value:\n            {\n              'Fn::ImportValue': !Sub '${ParentClusterStack}-LoadBalancerFullName'\n            }\n        - Name: TargetGroup\n          Value: !GetAtt TargetGroup.TargetGroupFullName\n      TreatMissingData: notBreaching\n  LoadBalancerListenerRule:\n    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'\n    Properties:\n      Actions:\n        - Type: forward\n          TargetGroupArn: !Ref TargetGroup\n      Conditions: !If\n        - HasLoadBalancerPathPattern\n        - !If\n          - HasLoadBalancerHostPattern\n          - - Field: host-header\n              Values:\n                - !Ref LoadBalancerHostPattern\n            - Field: path-pattern\n              Values:\n                - !Sub '${LoadBalancerPathPattern}'\n          - - Field: path-pattern\n              Values:\n                - !Sub '${LoadBalancerPathPattern}'\n        - !If\n          - HasLoadBalancerHostPattern\n          - - Field: host-header\n              Values:\n                - !Ref LoadBalancerHostPattern\n          - [] # neither LoadBalancerHostPattern nor LoadBalancerPathPattern specified\n      ListenerArn:\n        !If [\n          HasLoadBalancerHttps,\n          { 'Fn::ImportValue': !Sub '${ParentClusterStack}-HttpsListener' },\n          { 'Fn::ImportValue': !Sub '${ParentClusterStack}-HttpListener' }\n        ]\n      Priority: !Ref LoadBalancerPriority\n  TaskExecutionRole:\n    Type: 'AWS::IAM::Role'\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: 'ecs-tasks.amazonaws.com'\n            Action: 'sts:AssumeRole'\n      PermissionsBoundary:\n        !If [\n          HasPermissionsBoundary,\n          !Ref PermissionsBoundary,\n          !Ref 'AWS::NoValue'\n        ]\n      Policies:\n        - PolicyName: AmazonECSTaskExecutionRolePolicy # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html\n          PolicyDocument:\n            Statement:\n              - Effect: Allow\n                Action:\n                  - 'ecr:GetAuthorizationToken'\n                  - 'ecr:BatchCheckLayerAvailability'\n                  - 'ecr:GetDownloadUrlForLayer'\n                  - 'ecr:BatchGetImage'\n                Resource: '*'\n              - Effect: Allow\n                Action:\n                  - 'logs:CreateLogStream'\n                  - 'logs:PutLogEvents'\n                Resource: !GetAtt 'LogGroup.Arn'\n  TaskRole:\n    Type: 'AWS::IAM::Role'\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: 'ecs-tasks.amazonaws.com'\n            Action: 'sts:AssumeRole'\n      ManagedPolicyArns:\n        !If [\n          HasTaskPolicies,\n          !Split [',', !Ref TaskPolicies],\n          !Ref 'AWS::NoValue'\n        ]\n      PermissionsBoundary:\n        !If [\n          HasPermissionsBoundary,\n          !Ref PermissionsBoundary,\n          !Ref 'AWS::NoValue'\n        ]\n  TaskDefinition:\n    Type: 'AWS::ECS::TaskDefinition'\n    Properties:\n      ContainerDefinitions:\n        - !If\n          - HasProxyImage\n          - Name: proxy\n            Image: !Ref ProxyImage\n            Command:\n              !If [HasProxyCommand, !Ref ProxyCommand, !Ref 'AWS::NoValue']\n            PortMappings:\n              - ContainerPort: !Ref ProxyPort\n                Protocol: tcp\n            Essential: true\n            LogConfiguration:\n              LogDriver: awslogs\n              Options:\n                'awslogs-region': !Ref 'AWS::Region'\n                'awslogs-group': !Ref LogGroup\n                'awslogs-stream-prefix': proxy\n            Environment:\n              - !If [\n                  HasProxyEnvironment1Key,\n                  {\n                    Name: !Ref ProxyEnvironment1Key,\n                    Value: !Ref ProxyEnvironment1Value\n                  },\n                  !Ref 'AWS::NoValue'\n                ]\n              - !If [\n                  HasProxyEnvironment2Key,\n                  {\n                    Name: !Ref ProxyEnvironment2Key,\n                    Value: !Ref ProxyEnvironment2Value\n                  },\n                  !Ref 'AWS::NoValue'\n                ]\n              - !If [\n                  HasProxyEnvironment3Key,\n                  {\n                    Name: !Ref ProxyEnvironment3Key,\n                    Value: !Ref ProxyEnvironment3Value\n                  },\n                  !Ref 'AWS::NoValue'\n                ]\n          - !Ref 'AWS::NoValue'\n        - Name: app\n          Image: !Ref AppImage\n          Command:\n            !If [\n              HasAppCommand,\n              !Split [',', !Ref AppCommand],\n              !Ref 'AWS::NoValue'\n            ]\n          PortMappings:\n            - ContainerPort: !Ref AppPort\n              Protocol: tcp\n          Essential: true\n          LogConfiguration:\n            LogDriver: awslogs\n            Options:\n              'awslogs-region': !Ref 'AWS::Region'\n              'awslogs-group': !Ref LogGroup\n              'awslogs-stream-prefix': app\n          Environment:\n            - !If [\n                HasAppEnvironment1Key,\n                {\n                  Name: !Ref AppEnvironment1Key,\n                  Value: !Ref AppEnvironment1Value\n                },\n                !Ref 'AWS::NoValue'\n              ]\n            - !If [\n                HasAppEnvironment2Key,\n                {\n                  Name: !Ref AppEnvironment2Key,\n                  Value: !Ref AppEnvironment2Value\n                },\n                !Ref 'AWS::NoValue'\n              ]\n            - !If [\n                HasAppEnvironment3Key,\n                {\n                  Name: !Ref AppEnvironment3Key,\n                  Value: !Ref AppEnvironment3Value\n                },\n                !Ref 'AWS::NoValue'\n              ]\n        - !If\n          - HasSidecarImage\n          - Name: sidecar\n            Image: !Ref SidecarImage\n            Command:\n              !If [HasSidecarCommand, !Ref SidecarCommand, !Ref 'AWS::NoValue']\n            PortMappings:\n              - ContainerPort: !Ref SidecarPort\n                Protocol: tcp\n            Essential: true\n            LogConfiguration:\n              LogDriver: awslogs\n              Options:\n                'awslogs-region': !Ref 'AWS::Region'\n                'awslogs-group': !Ref LogGroup\n                'awslogs-stream-prefix': sidecar\n            Environment:\n              - !If [\n                  HasSidecarEnvironment1Key,\n                  {\n                    Name: !Ref SidecarEnvironment1Key,\n                    Value: !Ref SidecarEnvironment1Value\n                  },\n                  !Ref 'AWS::NoValue'\n                ]\n              - !If [\n                  HasSidecarEnvironment2Key,\n                  {\n                    Name: !Ref SidecarEnvironment2Key,\n                    Value: !Ref SidecarEnvironment2Value\n                  },\n                  !Ref 'AWS::NoValue'\n                ]\n              - !If [\n                  HasSidecarEnvironment3Key,\n                  {\n                    Name: !Ref SidecarEnvironment3Key,\n                    Value: !Ref SidecarEnvironment3Value\n                  },\n                  !Ref 'AWS::NoValue'\n                ]\n          - !Ref 'AWS::NoValue'\n      Cpu: !FindInMap [CpuMap, !Ref Cpu, Cpu]\n      ExecutionRoleArn: !GetAtt 'TaskExecutionRole.Arn'\n      Family: !Ref 'AWS::StackName'\n      Memory: !FindInMap [MemoryMap, !Ref Memory, Memory]\n      NetworkMode: awsvpc\n      RequiresCompatibilities: [FARGATE]\n      TaskRoleArn: !GetAtt 'TaskRole.Arn'\n  LogGroup:\n    Type: 'AWS::Logs::LogGroup'\n    Properties:\n      RetentionInDays: !Ref LogsRetentionInDays\n  ServiceSecurityGroup:\n    Type: 'AWS::EC2::SecurityGroup'\n    Properties:\n      GroupDescription: !Sub '${AWS::StackName}-service'\n      VpcId: { 'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC' }\n      SecurityGroupIngress:\n        - SourceSecurityGroupId:\n            {\n              'Fn::ImportValue': !Sub '${ParentClusterStack}-LoadBalancerSecurityGroup'\n            }\n          FromPort: !If [HasProxyImage, !Ref ProxyPort, !Ref AppPort]\n          ToPort: !If [HasProxyImage, !Ref ProxyPort, !Ref AppPort]\n          IpProtocol: tcp\n  Service:\n    DependsOn: LoadBalancerListenerRule\n    Type: 'AWS::ECS::Service'\n    Properties:\n      ServiceName: !Ref 'ServiceName'\n      Cluster: { 'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster' }\n      DeploymentConfiguration:\n        MaximumPercent: 200\n        MinimumHealthyPercent: 100\n      DesiredCount: !Ref DesiredCount\n      HealthCheckGracePeriodSeconds: !Ref HealthCheckGracePeriod\n      LaunchType: FARGATE\n      LoadBalancers:\n        - ContainerName: !If [HasProxyImage, proxy, app]\n          ContainerPort: !If [HasProxyImage, !Ref ProxyPort, !Ref AppPort]\n          TargetGroupArn: !Ref TargetGroup\n      NetworkConfiguration:\n        AwsvpcConfiguration:\n          AssignPublicIp: !If [HasSubnetsReachPublic, ENABLED, DISABLED]\n          SecurityGroups:\n            - !Ref ServiceSecurityGroup\n            - !If [\n                HasClientSecurityGroup1,\n                {\n                  'Fn::ImportValue': !Sub '${ParentClientStack1}-ClientSecurityGroup'\n                },\n                !Ref 'AWS::NoValue'\n              ]\n            - !If [\n                HasClientSecurityGroup2,\n                {\n                  'Fn::ImportValue': !Sub '${ParentClientStack2}-ClientSecurityGroup'\n                },\n                !Ref 'AWS::NoValue'\n              ]\n            - !If [\n                HasClientSecurityGroup3,\n                {\n                  'Fn::ImportValue': !Sub '${ParentClientStack3}-ClientSecurityGroup'\n                },\n                !Ref 'AWS::NoValue'\n              ]\n          Subnets:\n            !Split [\n              ',',\n              {\n                'Fn::ImportValue': !Sub '${ParentVPCStack}-Subnets${SubnetsReach}'\n              }\n            ]\n      PlatformVersion: '1.4.0'\n      TaskDefinition: !Ref TaskDefinition\n  CPUUtilizationTooHighAlarm:\n    Condition: HasAlertTopic\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmDescription: 'Average CPU utilization over last 10 minutes higher than 80%'\n      Namespace: 'AWS/ECS'\n      Dimensions:\n        - Name: ClusterName\n          Value: { 'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster' }\n        - Name: ServiceName\n          Value: !GetAtt 'Service.Name'\n      MetricName: CPUUtilization\n      ComparisonOperator: GreaterThanThreshold\n      Statistic: Average\n      Period: 300\n      EvaluationPeriods: 1\n      Threshold: 80\n      AlarmActions:\n        - { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n  ServiceFailedNotification:\n    Condition: HasAlertTopic\n    Type: 'AWS::Events::Rule'\n    Properties:\n      EventPattern:\n        source:\n          - 'aws.ec2'\n        'detail-type':\n          - 'ECS Service Action'\n        resources:\n          - !Ref Service\n        detail:\n          eventType:\n            - ERROR\n            - WARN\n      State: ENABLED\n      Targets:\n        - Arn: { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n          Id: rule\n  ScalableTargetRole: # based on http://docs.aws.amazon.com/AmazonECS/latest/developerguide/autoscale_IAM_role.html\n    Condition: HasAutoScaling\n    Type: 'AWS::IAM::Role'\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: 'application-autoscaling.amazonaws.com'\n            Action: 'sts:AssumeRole'\n      PermissionsBoundary:\n        !If [\n          HasPermissionsBoundary,\n          !Ref PermissionsBoundary,\n          !Ref 'AWS::NoValue'\n        ]\n      Policies:\n        - PolicyName: AmazonEC2ContainerServiceAutoscaleRole\n          PolicyDocument:\n            Version: '2012-10-17'\n            Statement:\n              - Effect: Allow\n                Action:\n                  - 'ecs:DescribeServices'\n                  - 'ecs:UpdateService'\n                Resource: '*'\n        - PolicyName: cloudwatch\n          PolicyDocument:\n            Version: '2012-10-17'\n            Statement:\n              - Effect: Allow\n                Action:\n                  - 'cloudwatch:DescribeAlarms'\n                Resource: '*'\n  ScalableTarget:\n    Condition: HasAutoScaling\n    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'\n    Properties:\n      MaxCapacity: !Ref MaxCapacity\n      MinCapacity: !Ref MinCapacity\n      ResourceId: !Sub\n        - 'service/${Cluster}/${Service}'\n        - Cluster: { 'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster' }\n          Service: !GetAtt 'Service.Name'\n      RoleARN: !GetAtt 'ScalableTargetRole.Arn'\n      ScalableDimension: 'ecs:service:DesiredCount'\n      ServiceNamespace: ecs\n  ScaleUpPolicy:\n    Condition: HasAutoScaling\n    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'\n    Properties:\n      PolicyName: !Sub '${AWS::StackName}-scale-up'\n      PolicyType: StepScaling\n      ScalingTargetId: !Ref ScalableTarget\n      StepScalingPolicyConfiguration:\n        AdjustmentType: PercentChangeInCapacity\n        Cooldown: 300\n        MinAdjustmentMagnitude: 1\n        StepAdjustments:\n          - MetricIntervalLowerBound: 0\n            ScalingAdjustment: 25\n  ScaleDownPolicy:\n    Condition: HasAutoScaling\n    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'\n    Properties:\n      PolicyName: !Sub '${AWS::StackName}-scale-down'\n      PolicyType: StepScaling\n      ScalingTargetId: !Ref ScalableTarget\n      StepScalingPolicyConfiguration:\n        AdjustmentType: PercentChangeInCapacity\n        Cooldown: 300\n        MinAdjustmentMagnitude: 1\n        StepAdjustments:\n          - MetricIntervalUpperBound: 0\n            ScalingAdjustment: -25\n  CPUUtilizationHighAlarm:\n    Condition: HasAutoScaling\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmDescription: 'Service is running out of CPU'\n      Namespace: 'AWS/ECS'\n      Dimensions:\n        - Name: ClusterName\n          Value: { 'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster' }\n        - Name: ServiceName\n          Value: !GetAtt 'Service.Name'\n      MetricName: CPUUtilization\n      ComparisonOperator: GreaterThanThreshold\n      Statistic: Average\n      Period: 300\n      EvaluationPeriods: 1\n      Threshold: 60\n      AlarmActions:\n        - !Ref ScaleUpPolicy\n  CPUUtilizationLowAlarm:\n    Condition: HasAutoScaling\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmDescription: 'Service is wasting CPU'\n      Namespace: 'AWS/ECS'\n      Dimensions:\n        - Name: ClusterName\n          Value: { 'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster' }\n        - Name: ServiceName\n          Value: !GetAtt 'Service.Name'\n      MetricName: CPUUtilization\n      ComparisonOperator: LessThanThreshold\n      Statistic: Average\n      Period: 300\n      EvaluationPeriods: 3\n      Threshold: 30\n      AlarmActions:\n        - !Ref ScaleDownPolicy\nOutputs:\n  TemplateID:\n    Description: 'cloudonaut.io template id.'\n    Value: 'fargate/service-cluster-alb'\n  TemplateVersion:\n    Description: 'cloudonaut.io template version.'\n    Value: '__VERSION__'\n  StackName:\n    Description: 'Stack name.'\n    Value: !Sub '${AWS::StackName}'\n",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_cloudformation_stack.ecs_cluster",
            "aws_cloudformation_stack.vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_NAMED_IAM"
            ],
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:246369665268:stack/commons-v4-nat-stack/62a93440-6fd7-11eb-8498-121037570659",
            "name": "commons-v4-nat-stack",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "IPAddress": "52.200.21.42",
              "StackName": "commons-v4-nat-stack",
              "TemplateID": "vpc/vpc-nat-gateway",
              "TemplateVersion": "__VERSION__"
            },
            "parameters": {
              "ParentVPCStack": "commons-v4-vpc-stack"
            },
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "template_body": "---\n# Copyright 2018 widdix GmbH\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'VPC: NAT Gateway, a cloudonaut.io template'\nMetadata:\n  'AWS::CloudFormation::Interface':\n    ParameterGroups:\n      - Label:\n          default: 'Parent Stacks'\n        Parameters:\n          - ParentVPCStack\n          - ParentAlertStack\n      - Label:\n          default: 'NatGateway Parameters'\n        Parameters:\n          - SubnetZone\nParameters:\n  ParentVPCStack:\n    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'\n    Type: String\n  ParentAlertStack:\n    Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'\n    Type: String\n    Default: ''\n  SubnetZone:\n    Description: 'Subnet zone.'\n    Type: String\n    Default: A\n    AllowedValues:\n      - A\n      - B\n      - C\n      - D\nConditions:\n  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]\nResources:\n  EIP:\n    Type: 'AWS::EC2::EIP'\n    Properties:\n      Domain: vpc\n  NatGateway:\n    Type: 'AWS::EC2::NatGateway'\n    Properties:\n      AllocationId: !GetAtt 'EIP.AllocationId'\n      SubnetId:\n        {\n          'Fn::ImportValue': !Sub '${ParentVPCStack}-Subnet${SubnetZone}Public'\n        }\n  Route:\n    Type: 'AWS::EC2::Route'\n    Properties:\n      RouteTableId:\n        {\n          'Fn::ImportValue': !Sub '${ParentVPCStack}-RouteTable${SubnetZone}Private'\n        }\n      DestinationCidrBlock: '0.0.0.0/0'\n      NatGatewayId: !Ref NatGateway\n  AlarmNatGatewayErrorPortAllocation:\n    Condition: HasAlertTopic\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmDescription: !Sub 'NAT gateway ${SubnetZone} could not allocate a source port'\n      Namespace: 'AWS/NATGateway'\n      MetricName: ErrorPortAllocation\n      Statistic: Sum\n      Period: 60\n      EvaluationPeriods: 1\n      ComparisonOperator: GreaterThanThreshold\n      Threshold: 0\n      AlarmActions:\n        - { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n      Dimensions:\n        - Name: NatGatewayId\n          Value: !Ref NatGateway\n  AlarmNatGatewayPacketsDropCount:\n    Condition: HasAlertTopic\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmDescription: !Sub 'NAT gateway ${SubnetZone} dropped packets'\n      Namespace: 'AWS/NATGateway'\n      MetricName: PacketsDropCount\n      Statistic: Sum\n      Period: 60\n      EvaluationPeriods: 1\n      ComparisonOperator: GreaterThanThreshold\n      Threshold: 0\n      AlarmActions:\n        - { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n      Dimensions:\n        - Name: NatGatewayId\n          Value: !Ref NatGateway\n  AlarmNatGatewayBandwidth:\n    Condition: HasAlertTopic\n    Type: 'AWS::CloudWatch::Alarm'\n    Properties:\n      AlarmActions:\n        - { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n      AlarmDescription: !Sub 'NAT gateway ${SubnetZone} bandwidth utilization is over 80%'\n      ComparisonOperator: GreaterThanThreshold\n      EvaluationPeriods: 1\n      Metrics:\n        - Id: 'in1'\n          Label: 'InFromDestination'\n          MetricStat:\n            Metric:\n              Namespace: 'AWS/NATGateway'\n              MetricName: BytesInFromDestination # bytes per minute\n              Dimensions:\n                - Name: NatGatewayId\n                  Value: !Ref NatGateway\n            Period: 60\n            Stat: Sum\n            Unit: Bytes\n          ReturnData: false\n        - Id: 'in2'\n          Label: 'InFromSource'\n          MetricStat:\n            Metric:\n              Namespace: 'AWS/NATGateway'\n              MetricName: BytesInFromSource # bytes per minute\n              Dimensions:\n                - Name: NatGatewayId\n                  Value: !Ref NatGateway\n            Period: 60\n            Stat: Sum\n            Unit: Bytes\n          ReturnData: false\n        - Id: 'out1'\n          Label: 'OutToDestination'\n          MetricStat:\n            Metric:\n              Namespace: 'AWS/NATGateway'\n              MetricName: BytesOutToDestination # bytes per minute\n              Dimensions:\n                - Name: NatGatewayId\n                  Value: !Ref NatGateway\n            Period: 60\n            Stat: Sum\n            Unit: Bytes\n          ReturnData: false\n        - Id: 'out2'\n          Label: 'OutToSource'\n          MetricStat:\n            Metric:\n              Namespace: 'AWS/NATGateway'\n              MetricName: BytesOutToSource # bytes per minute\n              Dimensions:\n                - Name: NatGatewayId\n                  Value: !Ref NatGateway\n            Period: 60\n            Stat: Sum\n            Unit: Bytes\n          ReturnData: false\n        - Expression: '(in1+in2+out1+out2)/2/60*8/1000/1000/1000' # to Gbit/s\n          Id: 'bandwidth'\n          Label: 'Bandwidth'\n          ReturnData: true\n      Threshold: 36 # hard limit is 45 Gbit/s\n      TreatMissingData: notBreaching\nOutputs:\n  TemplateID:\n    Description: 'cloudonaut.io template id.'\n    Value: 'vpc/vpc-nat-gateway'\n  TemplateVersion:\n    Description: 'cloudonaut.io template version.'\n    Value: '__VERSION__'\n  StackName:\n    Description: 'Stack name.'\n    Value: !Sub '${AWS::StackName}'\n  IPAddress:\n    Description: 'The public IP address of the NAT gateway.'\n    Value: !Ref EIP\n    Export:\n      Name: !Sub '${AWS::StackName}-IPAddress'\n",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_cloudformation_stack.vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_NAMED_IAM"
            ],
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:246369665268:stack/commons-v4-vpc-stack/2c66d2c0-6fd7-11eb-ac61-0ed2247e0ea9",
            "name": "commons-v4-vpc-stack",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "AZA": "us-east-1a",
              "AZB": "us-east-1b",
              "AZList": "us-east-1a,us-east-1b",
              "AZs": "2",
              "CidrBlock": "10.0.0.0/16",
              "CidrBlockIPv6": "2600:1f18:2123:fb00::/56",
              "InternetGateway": "igw-02845227c64dd711e",
              "RouteTableAPrivate": "rtb-0625c093e2cb4419f",
              "RouteTableAPublic": "rtb-0fca54502eb0c8ff9",
              "RouteTableBPrivate": "rtb-0cfe17dd9ea37d6f5",
              "RouteTableBPublic": "rtb-08deece0594d2aabc",
              "RouteTablesPrivate": "rtb-0625c093e2cb4419f,rtb-0cfe17dd9ea37d6f5",
              "RouteTablesPublic": "rtb-0fca54502eb0c8ff9,rtb-08deece0594d2aabc",
              "StackName": "commons-v4-vpc-stack",
              "SubnetAPrivate": "subnet-0ea708f65d5aaf2e1",
              "SubnetAPublic": "subnet-0aadeb7990d862ee0",
              "SubnetBPrivate": "subnet-0298ca839fcb87c12",
              "SubnetBPublic": "subnet-044a2af24237d1a1b",
              "SubnetsPrivate": "subnet-0ea708f65d5aaf2e1,subnet-0298ca839fcb87c12",
              "SubnetsPublic": "subnet-0aadeb7990d862ee0,subnet-044a2af24237d1a1b",
              "TemplateID": "vpc/vpc-2azs",
              "TemplateVersion": "13.4.0",
              "VPC": "vpc-078273851a340a9b5"
            },
            "parameters": {},
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "template_body": "---\n# Copyright 2018 widdix GmbH\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'VPC: public and private subnets in two availability zones, a cloudonaut.io template'\nMetadata:\n  'AWS::CloudFormation::Interface':\n    ParameterGroups:\n    - Label:\n        default: 'VPC Parameters'\n      Parameters:\n      - ClassB\nParameters:\n  ClassB:\n    Description: 'Class B of VPC (10.XXX.0.0/16)'\n    Type: Number\n    Default: 0\n    ConstraintDescription: 'Must be in the range [0-255]'\n    MinValue: 0\n    MaxValue: 255\nResources:\n  VPC:\n    Type: 'AWS::EC2::VPC'\n    Properties:\n      CidrBlock: !Sub '10.${ClassB}.0.0/16'\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      InstanceTenancy: default\n      Tags:\n      - Key: Name\n        Value: !Sub '10.${ClassB}.0.0/16'\n  VPCCidrBlock:\n    Type: 'AWS::EC2::VPCCidrBlock'\n    Properties:\n      AmazonProvidedIpv6CidrBlock: true\n      VpcId: !Ref VPC\n  InternetGateway:\n    Type: 'AWS::EC2::InternetGateway'\n    Properties:\n      Tags:\n      - Key: Name\n        Value: !Sub '10.${ClassB}.0.0/16'\n  EgressOnlyInternetGateway:\n    Type: 'AWS::EC2::EgressOnlyInternetGateway'\n    Properties:\n      VpcId: !Ref VPC\n  VPCGatewayAttachment:\n    Type: 'AWS::EC2::VPCGatewayAttachment'\n    Properties:\n      VpcId: !Ref VPC\n      InternetGatewayId: !Ref InternetGateway\n  SubnetAPublic:\n    DependsOn: VPCCidrBlock\n    Type: 'AWS::EC2::Subnet'\n    Properties:\n      #AssignIpv6AddressOnCreation: true # TODO can not be set if MapPublicIpOnLaunch is true as well\n      AvailabilityZone: !Select [0, !GetAZs '']\n      CidrBlock: !Sub '10.${ClassB}.0.0/20'\n      Ipv6CidrBlock: !Select [0, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]\n      MapPublicIpOnLaunch: true\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: 'A public'\n      - Key: Reach\n        Value: public\n  SubnetAPrivate:\n    DependsOn: VPCCidrBlock\n    Type: 'AWS::EC2::Subnet'\n    Properties:\n      AssignIpv6AddressOnCreation: false\n      AvailabilityZone: !Select [0, !GetAZs '']\n      CidrBlock: !Sub '10.${ClassB}.16.0/20'\n      Ipv6CidrBlock: !Select [1, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: 'A private'\n      - Key: Reach\n        Value: private\n  SubnetBPublic:\n    DependsOn: VPCCidrBlock\n    Type: 'AWS::EC2::Subnet'\n    Properties:\n      #AssignIpv6AddressOnCreation: true # TODO can not be set if MapPublicIpOnLaunch is true as well\n      AvailabilityZone: !Select [1, !GetAZs '']\n      CidrBlock: !Sub '10.${ClassB}.32.0/20'\n      Ipv6CidrBlock: !Select [2, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]\n      MapPublicIpOnLaunch: true\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: 'B public'\n      - Key: Reach\n        Value: public\n  SubnetBPrivate:\n    DependsOn: VPCCidrBlock\n    Type: 'AWS::EC2::Subnet'\n    Properties:\n      AssignIpv6AddressOnCreation: false\n      AvailabilityZone: !Select [1, !GetAZs '']\n      CidrBlock: !Sub '10.${ClassB}.48.0/20'\n      Ipv6CidrBlock: !Select [3, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: 'B private'\n      - Key: Reach\n        Value: private\n  RouteTablePublic: # should be RouteTableAPublic, but logical id was not changed for backward compatibility\n    Type: 'AWS::EC2::RouteTable'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: 'A Public'\n  RouteTablePrivate: # should be RouteTableAPrivate, but logical id was not changed for backward compatibility\n    Type: 'AWS::EC2::RouteTable'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: 'A Private'\n  RouteTableBPublic:\n    Type: 'AWS::EC2::RouteTable'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: 'B Public'\n  RouteTableBPrivate:\n    Type: 'AWS::EC2::RouteTable'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: 'B Private'\n  RouteTableAssociationAPublic:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref SubnetAPublic\n      RouteTableId: !Ref RouteTablePublic\n  RouteTableAssociationAPrivate:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref SubnetAPrivate\n      RouteTableId: !Ref RouteTablePrivate\n  RouteTableAssociationBPublic:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref SubnetBPublic\n      RouteTableId: !Ref RouteTableBPublic\n  RouteTableAssociationBPrivate:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref SubnetBPrivate\n      RouteTableId: !Ref RouteTableBPrivate\n  RouteTablePublicInternetRoute: # should be RouteTablePublicAInternetRoute, but logical id was not changed for backward compatibility\n    Type: 'AWS::EC2::Route'\n    DependsOn: VPCGatewayAttachment\n    Properties:\n      RouteTableId: !Ref RouteTablePublic\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  RouteTablePublicAInternetRouteIPv6:\n    Type: 'AWS::EC2::Route'\n    DependsOn: VPCGatewayAttachment\n    Properties:\n      RouteTableId: !Ref RouteTablePublic\n      DestinationIpv6CidrBlock: '::/0'\n      GatewayId: !Ref InternetGateway\n  RouteTablePrivateAInternetRouteIPv6:\n    Type: 'AWS::EC2::Route'\n    Properties:\n      RouteTableId: !Ref RouteTablePrivate\n      DestinationIpv6CidrBlock: '::/0'\n      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway\n  RouteTablePublicBInternetRoute:\n    Type: 'AWS::EC2::Route'\n    DependsOn: VPCGatewayAttachment\n    Properties:\n      RouteTableId: !Ref RouteTableBPublic\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  RouteTablePublicBInternetRouteIPv6:\n    Type: 'AWS::EC2::Route'\n    DependsOn: VPCGatewayAttachment\n    Properties:\n      RouteTableId: !Ref RouteTableBPublic\n      DestinationIpv6CidrBlock: '::/0'\n      GatewayId: !Ref InternetGateway\n  RouteTablePrivateBInternetRouteIPv6:\n    Type: 'AWS::EC2::Route'\n    Properties:\n      RouteTableId: !Ref RouteTableBPrivate\n      DestinationIpv6CidrBlock: '::/0'\n      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway\n  NetworkAclPublic:\n    Type: 'AWS::EC2::NetworkAcl'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Public\n  NetworkAclPrivate:\n    Type: 'AWS::EC2::NetworkAcl'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n      - Key: Name\n        Value: Private\n  SubnetNetworkAclAssociationAPublic:\n    Type: 'AWS::EC2::SubnetNetworkAclAssociation'\n    Properties:\n      SubnetId: !Ref SubnetAPublic\n      NetworkAclId: !Ref NetworkAclPublic\n  SubnetNetworkAclAssociationAPrivate:\n    Type: 'AWS::EC2::SubnetNetworkAclAssociation'\n    Properties:\n      SubnetId: !Ref SubnetAPrivate\n      NetworkAclId: !Ref NetworkAclPrivate\n  SubnetNetworkAclAssociationBPublic:\n    Type: 'AWS::EC2::SubnetNetworkAclAssociation'\n    Properties:\n      SubnetId: !Ref SubnetBPublic\n      NetworkAclId: !Ref NetworkAclPublic\n  SubnetNetworkAclAssociationBPrivate:\n    Type: 'AWS::EC2::SubnetNetworkAclAssociation'\n    Properties:\n      SubnetId: !Ref SubnetBPrivate\n      NetworkAclId: !Ref NetworkAclPrivate\n  NetworkAclEntryInPublicAllowAll:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPublic\n      RuleNumber: 99\n      Protocol: -1\n      RuleAction: allow\n      Egress: false\n      CidrBlock: '0.0.0.0/0'\n  NetworkAclEntryInPublicAllowAllIPv6:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPublic\n      RuleNumber: 98\n      Protocol: -1\n      RuleAction: allow\n      Egress: false\n      Ipv6CidrBlock: '::/0'\n  NetworkAclEntryOutPublicAllowAll:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPublic\n      RuleNumber: 99\n      Protocol: -1\n      RuleAction: allow\n      Egress: true\n      CidrBlock: '0.0.0.0/0'\n  NetworkAclEntryOutPublicAllowAllIPv6:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPublic\n      RuleNumber: 98\n      Protocol: -1\n      RuleAction: allow\n      Egress: true\n      Ipv6CidrBlock: '::/0'\n  NetworkAclEntryInPrivateAllowAll:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPrivate\n      RuleNumber: 99\n      Protocol: -1\n      RuleAction: allow\n      Egress: false\n      CidrBlock: '0.0.0.0/0'\n  NetworkAclEntryInPrivateAllowAllIPv6:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPrivate\n      RuleNumber: 98\n      Protocol: -1\n      RuleAction: allow\n      Egress: false\n      Ipv6CidrBlock: '::/0'\n  NetworkAclEntryOutPrivateAllowAll:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPrivate\n      RuleNumber: 99\n      Protocol: -1\n      RuleAction: allow\n      Egress: true\n      CidrBlock: '0.0.0.0/0'\n  NetworkAclEntryOutPrivateAllowAllIPv6:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPrivate\n      RuleNumber: 98\n      Protocol: -1\n      RuleAction: allow\n      Egress: true\n      Ipv6CidrBlock: '::/0'\nOutputs:\n  TemplateID:\n    Description: 'cloudonaut.io template id.'\n    Value: 'vpc/vpc-2azs'\n  TemplateVersion:\n    Description: 'cloudonaut.io template version.'\n    Value: '13.4.0'\n  StackName:\n    Description: 'Stack name.'\n    Value: !Sub '${AWS::StackName}'\n  AZs: # Better name would be NumberOfAZs, but we keep the name for backward compatibility\n    Description: 'Number of AZs'\n    Value: 2\n    Export:\n      Name: !Sub '${AWS::StackName}-AZs'\n  AZList:  # Better name would be AZs, but the name was already used\n    Description: 'List of AZs'\n    Value: !Join [',', [!Select [0, !GetAZs ''], !Select [1, !GetAZs '']]]\n    Export:\n      Name: !Sub '${AWS::StackName}-AZList'\n  AZA:\n    Description: 'AZ of A'\n    Value: !Select [0, !GetAZs '']\n    Export:\n      Name: !Sub '${AWS::StackName}-AZA'\n  AZB:\n    Description: 'AZ of B'\n    Value: !Select [1, !GetAZs '']\n    Export:\n      Name: !Sub '${AWS::StackName}-AZB'\n  CidrBlock:\n    Description: 'The set of IP addresses for the VPC.'\n    Value: !GetAtt 'VPC.CidrBlock'\n    Export:\n      Name: !Sub '${AWS::StackName}-CidrBlock'\n  CidrBlockIPv6:\n    Description: 'The set of IPv6 addresses for the VPC.'\n    Value: !Select [0, !GetAtt 'VPC.Ipv6CidrBlocks']\n    Export:\n      Name: !Sub '${AWS::StackName}-CidrBlockIPv6'\n  VPC:\n    Description: 'VPC.'\n    Value: !Ref VPC\n    Export:\n      Name: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Description: 'InternetGateway.'\n    Value: !Ref InternetGateway\n    Export:\n      Name: !Sub '${AWS::StackName}-InternetGateway'\n  SubnetsPublic:\n    Description: 'Subnets public.'\n    Value: !Join [',', [!Ref SubnetAPublic, !Ref SubnetBPublic]]\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetsPublic'\n  SubnetsPrivate:\n    Description: 'Subnets private.'\n    Value: !Join [',', [!Ref SubnetAPrivate, !Ref SubnetBPrivate]]\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetsPrivate'\n  RouteTablesPrivate:\n    Description: 'Route tables private.'\n    Value: !Join [',', [!Ref RouteTablePrivate, !Ref RouteTableBPrivate]]\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTablesPrivate'\n  RouteTablesPublic:\n    Description: 'Route tables public.'\n    Value: !Join [',', [!Ref RouteTablePublic, !Ref RouteTableBPublic]]\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTablesPublic'\n  SubnetAPublic:\n    Description: 'Subnet A public.'\n    Value: !Ref SubnetAPublic\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetAPublic'\n  RouteTableAPublic:\n    Description: 'Route table A public.'\n    Value: !Ref RouteTablePublic\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTableAPublic'\n  SubnetAPrivate:\n    Description: 'Subnet A private.'\n    Value: !Ref SubnetAPrivate\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetAPrivate'\n  RouteTableAPrivate:\n    Description: 'Route table A private.'\n    Value: !Ref RouteTablePrivate\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTableAPrivate'\n  SubnetBPublic:\n    Description: 'Subnet B public.'\n    Value: !Ref SubnetBPublic\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetBPublic'\n  RouteTableBPublic:\n    Description: 'Route table B public.'\n    Value: !Ref RouteTableBPublic\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTableBPublic'\n  SubnetBPrivate:\n    Description: 'Subnet B private.'\n    Value: !Ref SubnetBPrivate\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetBPrivate'\n  RouteTableBPrivate:\n    Description: 'Route table B private.'\n    Value: !Ref RouteTableBPrivate\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTableBPrivate'\n",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "main-repo",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-1:246369665268:repository/commons-v4",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "id": "commons-v4",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "IMMUTABLE",
            "name": "commons-v4",
            "registry_id": "246369665268",
            "repository_url": "246369665268.dkr.ecr.us-east-1.amazonaws.com/commons-v4",
            "tags": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    }
  ]
}
