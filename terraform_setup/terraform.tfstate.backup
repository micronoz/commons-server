{
  "version": 4,
  "terraform_version": "0.14.6",
  "serial": 198,
  "lineage": "ac72d9db-dcdb-04c6-1992-7e376bd84c4b",
  "outputs": {
    "ec2": {
      "value": {
        "InstanceId": "i-0a47d45c4d7fd930c",
        "PrivateIPAddress": "10.0.1.7",
        "PublicIPAddress": "54.146.222.25",
        "StackName": "commons-ec2-stack-v2",
        "TemplateID": "ec2/al2-mutable-public",
        "TemplateVersion": "__VERSION__"
      },
      "type": [
        "map",
        "string"
      ]
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "client_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_NAMED_IAM"
            ],
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:246369665268:stack/commons-client-sg-stack/0c160db0-7018-11eb-92ad-0ae28d89ba2b",
            "name": "commons-client-sg-stack",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "ClientSecurityGroup": "sg-01c32e1c7a82c3e81",
              "StackName": "commons-client-sg-stack",
              "TemplateID": "state/client-sg",
              "TemplateVersion": "__VERSION__"
            },
            "parameters": {
              "ParentVPCStack": "commons-vpc-stack"
            },
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "template_body": "---\n# Copyright 2018 widdix GmbH\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'State: Client security group, a cloudonaut.io template, sponsored by https://github.com/ngault'\nMetadata:\n  'AWS::CloudFormation::Interface':\n    ParameterGroups:\n      - Label:\n          default: 'Parent Stacks'\n        Parameters:\n          - ParentVPCStack\nParameters:\n  ParentVPCStack:\n    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'\n    Type: String\nResources:\n  ClientSecurityGroup:\n    Type: 'AWS::EC2::SecurityGroup'\n    Properties:\n      GroupDescription: !Ref 'AWS::StackName'\n      VpcId: { 'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC' }\nOutputs:\n  TemplateID:\n    Description: 'cloudonaut.io template id.'\n    Value: 'state/client-sg'\n  TemplateVersion:\n    Description: 'cloudonaut.io template version.'\n    Value: '__VERSION__'\n  StackName:\n    Description: 'Stack name.'\n    Value: !Sub '${AWS::StackName}'\n  ClientSecurityGroup:\n    Description: 'Use this Security Group to reference client traffic.'\n    Value: !Ref ClientSecurityGroup\n    Export:\n      Name: !Sub '${AWS::StackName}-ClientSecurityGroup'\n",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_cloudformation_stack.vpc"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "key-store",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_NAMED_IAM"
            ],
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:246369665268:stack/commons-kms-stack-final/84171e20-700f-11eb-80bd-12f057d255e7",
            "name": "commons-kms-stack-final",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "KeyArn": "arn:aws:kms:us-east-1:246369665268:key/00783b18-5cdd-48b8-ae4b-05fff649584b",
              "KeyId": "00783b18-5cdd-48b8-ae4b-05fff649584b",
              "StackName": "commons-kms-stack-final",
              "TemplateID": "security/kms-key",
              "TemplateVersion": "13.4.0"
            },
            "parameters": {},
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "template_body": "---\n# Copyright 2018 widdix GmbH\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Security: KMS customer managed CMK for AWS services, a cloudonaut.io template'\nMetadata:\n  'AWS::CloudFormation::Interface':\n    ParameterGroups:\n      - Label:\n          default: 'Parent Stacks'\n        Parameters:\n          - ParentAlertStack\n      - Label:\n          default: 'KMS Parameters'\n        Parameters:\n          - Service\nParameters:\n  ParentAlertStack:\n    Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'\n    Type: String\n    Default: ''\n  Service:\n    Description: 'Which AWS service is allowed to use this CMK?'\n    Type: String\n    AllowedValues:\n      - 'ALL_SERVICES'\n      - 'S3_PUBLIC_ACCESS'\n      - connect\n      - dms\n      - ssm\n      - ec2\n      - elasticfilesystem\n      - es\n      - kinesis\n      - kinesisvideo\n      - lambda\n      - lex\n      - redshift\n      - rds\n      - secretsmanager\n      - ses\n      - s3\n      - importexport\n      - sqs\n      - workmail\n      - workspaces\n    Default: ALL_SERVICES\nConditions:\n  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]\n  HasServiceAllServices: !Equals [!Ref Service, 'ALL_SERVICES']\n  HasServiceS3PublicAccess: !Equals [!Ref Service, 'S3_PUBLIC_ACCESS']\nResources:\n  Key:\n    DeletionPolicy: Retain\n    UpdateReplacePolicy: Retain\n    Type: 'AWS::KMS::Key'\n    Properties:\n      EnableKeyRotation: true\n      KeyPolicy:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'\n            Action: 'kms:*'\n            Resource: '*'\n          - Effect: Allow\n            Principal:\n              AWS: '*'\n            Action:\n              - 'kms:Encrypt'\n              - 'kms:Decrypt'\n              - 'kms:ReEncrypt*'\n              - 'kms:GenerateDataKey*'\n              - 'kms:CreateGrant'\n              - 'kms:ListGrants'\n              - 'kms:DescribeKey'\n            Resource: '*'\n            Condition:\n              StringEquals: !If\n                - HasServiceAllServices\n                - 'kms:CallerAccount': !Ref 'AWS::AccountId'\n                - 'kms:CallerAccount': !Ref 'AWS::AccountId'\n                  'kms:ViaService': !Sub '${Service}.${AWS::Region}.amazonaws.com'\n          - !If\n            - HasServiceS3PublicAccess\n            - Effect: Allow\n              Principal:\n                AWS: '*'\n              Action:\n                - 'kms:Decrypt'\n              Resource: '*'\n              Condition:\n                StringEquals:\n                  'kms:ViaService': !Sub 's3.${AWS::Region}.amazonaws.com'\n            - !Ref 'AWS::NoValue'\n  KeyAlias:\n    DeletionPolicy: Retain\n    UpdateReplacePolicy: Retain\n    Type: 'AWS::KMS::Alias'\n    Properties:\n      AliasName: !Sub 'alias/${AWS::StackName}'\n      TargetKeyId: !Ref Key\n  DeletionNotification:\n    Condition: HasAlertTopic\n    Type: 'AWS::Events::Rule'\n    Properties:\n      EventPattern:\n        source:\n          - 'aws.kms'\n        'detail-type':\n          - 'AWS API Call via CloudTrail'\n        resources:\n          - !GetAtt Key.Arn\n        detail:\n          eventSource:\n            - 'kms.amazonaws.com'\n          'eventName':\n            - ScheduleKeyDeletion\n            - DisableKey\n      State: ENABLED\n      Targets:\n        - Arn: { 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN' }\n          Id: rule\nOutputs:\n  TemplateID:\n    Description: 'cloudonaut.io template id.'\n    Value: 'security/kms-key'\n  TemplateVersion:\n    Description: 'cloudonaut.io template version.'\n    Value: '13.4.0'\n  StackName:\n    Description: 'Stack name.'\n    Value: !Sub '${AWS::StackName}'\n  KeyId:\n    Description: 'Key id.'\n    Value: !Ref Key\n    Export:\n      Name: !Sub '${AWS::StackName}-KeyId'\n  KeyArn:\n    Description: 'Key ARN.'\n    Value: !GetAtt 'Key.Arn'\n    Export:\n      Name: !Sub '${AWS::StackName}-KeyArn'\n",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_NAMED_IAM"
            ],
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:246369665268:stack/commons-vpc-stack/d5853e10-7017-11eb-8ae3-123e22873efd",
            "name": "commons-vpc-stack",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "AZA": "us-east-1a",
              "AZB": "us-east-1b",
              "AZList": "us-east-1a,us-east-1b",
              "AZs": "2",
              "CidrBlock": "10.0.0.0/16",
              "CidrBlockIPv6": "2600:1f18:39d:1600::/56",
              "InternetGateway": "igw-0648e2c5ec45d1c15",
              "RouteTableAPrivate": "rtb-06449fadb6b51c5b7",
              "RouteTableAPublic": "rtb-029cdda5e2d6fde3d",
              "RouteTableBPrivate": "rtb-0abfd57e13d08b2c1",
              "RouteTableBPublic": "rtb-0c6ca1591d5a112f6",
              "RouteTablesPrivate": "rtb-06449fadb6b51c5b7,rtb-0abfd57e13d08b2c1",
              "RouteTablesPublic": "rtb-029cdda5e2d6fde3d,rtb-0c6ca1591d5a112f6",
              "StackName": "commons-vpc-stack",
              "SubnetAPrivate": "subnet-0b9ca814866dd6886",
              "SubnetAPublic": "subnet-06e19ce011bbd155b",
              "SubnetBPrivate": "subnet-0f168a31d6128d7ac",
              "SubnetBPublic": "subnet-029040fa45a5856d9",
              "SubnetsPrivate": "subnet-0b9ca814866dd6886,subnet-0f168a31d6128d7ac",
              "SubnetsPublic": "subnet-06e19ce011bbd155b,subnet-029040fa45a5856d9",
              "TemplateID": "vpc/vpc-2azs",
              "TemplateVersion": "13.4.0",
              "VPC": "vpc-0e3d52d4e3fcb016a"
            },
            "parameters": {},
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "template_body": "---\n# Copyright 2018 widdix GmbH\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'VPC: public and private subnets in two availability zones, a cloudonaut.io template'\nMetadata:\n  'AWS::CloudFormation::Interface':\n    ParameterGroups:\n      - Label:\n          default: 'VPC Parameters'\n        Parameters:\n          - ClassB\nParameters:\n  ClassB:\n    Description: 'Class B of VPC (10.XXX.0.0/16)'\n    Type: Number\n    Default: 0\n    ConstraintDescription: 'Must be in the range [0-255]'\n    MinValue: 0\n    MaxValue: 255\n  # Name:\n  #   Description: 'The name of the domain (hosted zone).'\n  #   Type: String\nResources:\n  # HostedZone:\n  #   Type: 'AWS::Route53::HostedZone'\n  #   Properties:\n  #     HostedZoneConfig:\n  #       Comment: !Sub '${Name} public DNS zone'\n  #     Name: !Ref Name\n  VPC:\n    Type: 'AWS::EC2::VPC'\n    Properties:\n      CidrBlock: !Sub '10.${ClassB}.0.0/16'\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      InstanceTenancy: default\n      Tags:\n        - Key: Name\n          Value: !Sub '10.${ClassB}.0.0/16'\n  VPCCidrBlock:\n    Type: 'AWS::EC2::VPCCidrBlock'\n    Properties:\n      AmazonProvidedIpv6CidrBlock: true\n      VpcId: !Ref VPC\n  InternetGateway:\n    Type: 'AWS::EC2::InternetGateway'\n    Properties:\n      Tags:\n        - Key: Name\n          Value: !Sub '10.${ClassB}.0.0/16'\n  EgressOnlyInternetGateway:\n    Type: 'AWS::EC2::EgressOnlyInternetGateway'\n    Properties:\n      VpcId: !Ref VPC\n  VPCGatewayAttachment:\n    Type: 'AWS::EC2::VPCGatewayAttachment'\n    Properties:\n      VpcId: !Ref VPC\n      InternetGatewayId: !Ref InternetGateway\n  SubnetAPublic:\n    DependsOn: VPCCidrBlock\n    Type: 'AWS::EC2::Subnet'\n    Properties:\n      #AssignIpv6AddressOnCreation: true # TODO can not be set if MapPublicIpOnLaunch is true as well\n      AvailabilityZone: !Select [0, !GetAZs '']\n      CidrBlock: !Sub '10.${ClassB}.0.0/20'\n      Ipv6CidrBlock:\n        !Select [0, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]\n      MapPublicIpOnLaunch: true\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: 'A public'\n        - Key: Reach\n          Value: public\n  SubnetAPrivate:\n    DependsOn: VPCCidrBlock\n    Type: 'AWS::EC2::Subnet'\n    Properties:\n      AssignIpv6AddressOnCreation: false\n      AvailabilityZone: !Select [0, !GetAZs '']\n      CidrBlock: !Sub '10.${ClassB}.16.0/20'\n      Ipv6CidrBlock:\n        !Select [1, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: 'A private'\n        - Key: Reach\n          Value: private\n  SubnetBPublic:\n    DependsOn: VPCCidrBlock\n    Type: 'AWS::EC2::Subnet'\n    Properties:\n      #AssignIpv6AddressOnCreation: true # TODO can not be set if MapPublicIpOnLaunch is true as well\n      AvailabilityZone: !Select [1, !GetAZs '']\n      CidrBlock: !Sub '10.${ClassB}.32.0/20'\n      Ipv6CidrBlock:\n        !Select [2, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]\n      MapPublicIpOnLaunch: true\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: 'B public'\n        - Key: Reach\n          Value: public\n  SubnetBPrivate:\n    DependsOn: VPCCidrBlock\n    Type: 'AWS::EC2::Subnet'\n    Properties:\n      AssignIpv6AddressOnCreation: false\n      AvailabilityZone: !Select [1, !GetAZs '']\n      CidrBlock: !Sub '10.${ClassB}.48.0/20'\n      Ipv6CidrBlock:\n        !Select [3, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: 'B private'\n        - Key: Reach\n          Value: private\n  RouteTablePublic: # should be RouteTableAPublic, but logical id was not changed for backward compatibility\n    Type: 'AWS::EC2::RouteTable'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: 'A Public'\n  RouteTablePrivate: # should be RouteTableAPrivate, but logical id was not changed for backward compatibility\n    Type: 'AWS::EC2::RouteTable'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: 'A Private'\n  RouteTableBPublic:\n    Type: 'AWS::EC2::RouteTable'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: 'B Public'\n  RouteTableBPrivate:\n    Type: 'AWS::EC2::RouteTable'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: 'B Private'\n  RouteTableAssociationAPublic:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref SubnetAPublic\n      RouteTableId: !Ref RouteTablePublic\n  RouteTableAssociationAPrivate:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref SubnetAPrivate\n      RouteTableId: !Ref RouteTablePrivate\n  RouteTableAssociationBPublic:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref SubnetBPublic\n      RouteTableId: !Ref RouteTableBPublic\n  RouteTableAssociationBPrivate:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref SubnetBPrivate\n      RouteTableId: !Ref RouteTableBPrivate\n  RouteTablePublicInternetRoute: # should be RouteTablePublicAInternetRoute, but logical id was not changed for backward compatibility\n    Type: 'AWS::EC2::Route'\n    DependsOn: VPCGatewayAttachment\n    Properties:\n      RouteTableId: !Ref RouteTablePublic\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  RouteTablePublicAInternetRouteIPv6:\n    Type: 'AWS::EC2::Route'\n    DependsOn: VPCGatewayAttachment\n    Properties:\n      RouteTableId: !Ref RouteTablePublic\n      DestinationIpv6CidrBlock: '::/0'\n      GatewayId: !Ref InternetGateway\n  RouteTablePrivateAInternetRouteIPv6:\n    Type: 'AWS::EC2::Route'\n    Properties:\n      RouteTableId: !Ref RouteTablePrivate\n      DestinationIpv6CidrBlock: '::/0'\n      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway\n  RouteTablePublicBInternetRoute:\n    Type: 'AWS::EC2::Route'\n    DependsOn: VPCGatewayAttachment\n    Properties:\n      RouteTableId: !Ref RouteTableBPublic\n      DestinationCidrBlock: '0.0.0.0/0'\n      GatewayId: !Ref InternetGateway\n  RouteTablePublicBInternetRouteIPv6:\n    Type: 'AWS::EC2::Route'\n    DependsOn: VPCGatewayAttachment\n    Properties:\n      RouteTableId: !Ref RouteTableBPublic\n      DestinationIpv6CidrBlock: '::/0'\n      GatewayId: !Ref InternetGateway\n  RouteTablePrivateBInternetRouteIPv6:\n    Type: 'AWS::EC2::Route'\n    Properties:\n      RouteTableId: !Ref RouteTableBPrivate\n      DestinationIpv6CidrBlock: '::/0'\n      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway\n  NetworkAclPublic:\n    Type: 'AWS::EC2::NetworkAcl'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: Public\n  NetworkAclPrivate:\n    Type: 'AWS::EC2::NetworkAcl'\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: Private\n  SubnetNetworkAclAssociationAPublic:\n    Type: 'AWS::EC2::SubnetNetworkAclAssociation'\n    Properties:\n      SubnetId: !Ref SubnetAPublic\n      NetworkAclId: !Ref NetworkAclPublic\n  SubnetNetworkAclAssociationAPrivate:\n    Type: 'AWS::EC2::SubnetNetworkAclAssociation'\n    Properties:\n      SubnetId: !Ref SubnetAPrivate\n      NetworkAclId: !Ref NetworkAclPrivate\n  SubnetNetworkAclAssociationBPublic:\n    Type: 'AWS::EC2::SubnetNetworkAclAssociation'\n    Properties:\n      SubnetId: !Ref SubnetBPublic\n      NetworkAclId: !Ref NetworkAclPublic\n  SubnetNetworkAclAssociationBPrivate:\n    Type: 'AWS::EC2::SubnetNetworkAclAssociation'\n    Properties:\n      SubnetId: !Ref SubnetBPrivate\n      NetworkAclId: !Ref NetworkAclPrivate\n  NetworkAclEntryInPublicAllowAll:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPublic\n      RuleNumber: 99\n      Protocol: -1\n      RuleAction: allow\n      Egress: false\n      CidrBlock: '0.0.0.0/0'\n  NetworkAclEntryInPublicAllowAllIPv6:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPublic\n      RuleNumber: 98\n      Protocol: -1\n      RuleAction: allow\n      Egress: false\n      Ipv6CidrBlock: '::/0'\n  NetworkAclEntryOutPublicAllowAll:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPublic\n      RuleNumber: 99\n      Protocol: -1\n      RuleAction: allow\n      Egress: true\n      CidrBlock: '0.0.0.0/0'\n  NetworkAclEntryOutPublicAllowAllIPv6:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPublic\n      RuleNumber: 98\n      Protocol: -1\n      RuleAction: allow\n      Egress: true\n      Ipv6CidrBlock: '::/0'\n  NetworkAclEntryInPrivateAllowAll:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPrivate\n      RuleNumber: 99\n      Protocol: -1\n      RuleAction: allow\n      Egress: false\n      CidrBlock: '0.0.0.0/0'\n  NetworkAclEntryInPrivateAllowAllIPv6:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPrivate\n      RuleNumber: 98\n      Protocol: -1\n      RuleAction: allow\n      Egress: false\n      Ipv6CidrBlock: '::/0'\n  NetworkAclEntryOutPrivateAllowAll:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPrivate\n      RuleNumber: 99\n      Protocol: -1\n      RuleAction: allow\n      Egress: true\n      CidrBlock: '0.0.0.0/0'\n  NetworkAclEntryOutPrivateAllowAllIPv6:\n    Type: 'AWS::EC2::NetworkAclEntry'\n    Properties:\n      NetworkAclId: !Ref NetworkAclPrivate\n      RuleNumber: 98\n      Protocol: -1\n      RuleAction: allow\n      Egress: true\n      Ipv6CidrBlock: '::/0'\nOutputs:\n  TemplateID:\n    Description: 'cloudonaut.io template id.'\n    Value: 'vpc/vpc-2azs'\n  TemplateVersion:\n    Description: 'cloudonaut.io template version.'\n    Value: '13.4.0'\n  StackName:\n    Description: 'Stack name.'\n    Value: !Sub '${AWS::StackName}'\n  AZs: # Better name would be NumberOfAZs, but we keep the name for backward compatibility\n    Description: 'Number of AZs'\n    Value: 2\n    Export:\n      Name: !Sub '${AWS::StackName}-AZs'\n  AZList: # Better name would be AZs, but the name was already used\n    Description: 'List of AZs'\n    Value: !Join [',', [!Select [0, !GetAZs ''], !Select [1, !GetAZs '']]]\n    Export:\n      Name: !Sub '${AWS::StackName}-AZList'\n  AZA:\n    Description: 'AZ of A'\n    Value: !Select [0, !GetAZs '']\n    Export:\n      Name: !Sub '${AWS::StackName}-AZA'\n  AZB:\n    Description: 'AZ of B'\n    Value: !Select [1, !GetAZs '']\n    Export:\n      Name: !Sub '${AWS::StackName}-AZB'\n  CidrBlock:\n    Description: 'The set of IP addresses for the VPC.'\n    Value: !GetAtt 'VPC.CidrBlock'\n    Export:\n      Name: !Sub '${AWS::StackName}-CidrBlock'\n  CidrBlockIPv6:\n    Description: 'The set of IPv6 addresses for the VPC.'\n    Value: !Select [0, !GetAtt 'VPC.Ipv6CidrBlocks']\n    Export:\n      Name: !Sub '${AWS::StackName}-CidrBlockIPv6'\n  VPC:\n    Description: 'VPC.'\n    Value: !Ref VPC\n    Export:\n      Name: !Sub '${AWS::StackName}-VPC'\n  InternetGateway:\n    Description: 'InternetGateway.'\n    Value: !Ref InternetGateway\n    Export:\n      Name: !Sub '${AWS::StackName}-InternetGateway'\n  SubnetsPublic:\n    Description: 'Subnets public.'\n    Value: !Join [',', [!Ref SubnetAPublic, !Ref SubnetBPublic]]\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetsPublic'\n  SubnetsPrivate:\n    Description: 'Subnets private.'\n    Value: !Join [',', [!Ref SubnetAPrivate, !Ref SubnetBPrivate]]\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetsPrivate'\n  RouteTablesPrivate:\n    Description: 'Route tables private.'\n    Value: !Join [',', [!Ref RouteTablePrivate, !Ref RouteTableBPrivate]]\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTablesPrivate'\n  RouteTablesPublic:\n    Description: 'Route tables public.'\n    Value: !Join [',', [!Ref RouteTablePublic, !Ref RouteTableBPublic]]\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTablesPublic'\n  SubnetAPublic:\n    Description: 'Subnet A public.'\n    Value: !Ref SubnetAPublic\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetAPublic'\n  RouteTableAPublic:\n    Description: 'Route table A public.'\n    Value: !Ref RouteTablePublic\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTableAPublic'\n  SubnetAPrivate:\n    Description: 'Subnet A private.'\n    Value: !Ref SubnetAPrivate\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetAPrivate'\n  RouteTableAPrivate:\n    Description: 'Route table A private.'\n    Value: !Ref RouteTablePrivate\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTableAPrivate'\n  SubnetBPublic:\n    Description: 'Subnet B public.'\n    Value: !Ref SubnetBPublic\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetBPublic'\n  RouteTableBPublic:\n    Description: 'Route table B public.'\n    Value: !Ref RouteTableBPublic\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTableBPublic'\n  SubnetBPrivate:\n    Description: 'Subnet B private.'\n    Value: !Ref SubnetBPrivate\n    Export:\n      Name: !Sub '${AWS::StackName}-SubnetBPrivate'\n  RouteTableBPrivate:\n    Description: 'Route table B private.'\n    Value: !Ref RouteTableBPrivate\n    Export:\n      Name: !Sub '${AWS::StackName}-RouteTableBPrivate'\n",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "create_before_destroy": true
        }
      ]
    }
  ]
}
